kind: pipeline
name: ci

steps:

  # Clean agent images and containers to prevent disk space overuse
  - name: clean agent
    image: docker
    commands:
    - docker system prune -f
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

  # Build docker images
  - name: build
    image: docker
    commands:
    - docker build -t test-ntr -f Dockerfile.test .
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

  # Trigger unit tests
  - name: unit tests
    image: docker
    commands:
    - docker run --rm test-ntr rspec -f d
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

  # Invoke static code analysis through Ruby libraries
  - name: static code analysis
    image: docker
    commands:
      - docker run --rm test-ntr rubocop
      - docker run --rm test-ntr govuk-lint-sass app/javascript
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

  # Invoke security analysis through Ruby libraries
  - name: security tests
    image: docker
    commands:
       - docker run --rm test-ntr bundle audit check --update
       - docker run --rm test-ntr yarn audit
       - docker run --rm test-ntr brakeman
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

  # Execute integration/scenario tests
  - name: integration tests
    image: docker
    commands:
    - docker run --rm test-ntr cucumber
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
        
    # Invoke terraform scripts to ensure ecr is available for deploy step.
  - name: initialise ecr
    image: hashicorp/terraform:0.12.3
    commands:
      - git clone https://github.com/InformedSolutions/JAQU-CAZ-IAC.git
      - cd JAQU-CAZ-IAC/terraform/projects/ntr-web/environments/dev
      - terraform init
      - terraform workspace select dev || terraform workspace new dev
      - terraform apply -target=module.ecr -auto-approve
    environment:
      TF_VAR_access_key:
        from_secret: aws_access_key_id
      TF_VAR_secret_key:
        from_secret: aws_secret_access_key
    when:
      event:
        exclude:
        - pull_request

  # Push built image to ECR registry
  - name: publish image to ecr
    image: plugins/ecr
    settings:
      access_key:
        from_secret: aws_access_key_id
      secret_key:
        from_secret: aws_secret_access_key
      repo: 018330602464.dkr.ecr.eu-west-2.amazonaws.com/ntr-web
      registry: 018330602464.dkr.ecr.eu-west-2.amazonaws.com
      dockerfile: Dockerfile.build
      region: eu-west-2
      tags:
        - latest
        - ${DRONE_BUILD_NUMBER}
      build_args:
        - secret_key_base=${DRONE_COMMIT}
    when:
      event:
        exclude:
        - pull_request

  # Invoke terraform scripts with tagged image number
  - name: deploy
    image: hashicorp/terraform:0.12.3
    commands:
      - cd JAQU-CAZ-IAC/terraform/projects/ntr-web/environments/dev
      - terraform init
      - terraform workspace select dev
      - terraform apply -auto-approve
    environment:
      TF_VAR_access_key:
        from_secret: aws_access_key_id
      TF_VAR_secret_key:
        from_secret: aws_secret_access_key
      TF_VAR_s3_aws_access_key_id:
        from_secret: aws_access_key_id
      TF_VAR_s3_aws_secret_access_key:
        from_secret: aws_secret_access_key
      TF_VAR_build_number: ${DRONE_BUILD_NUMBER}
      TF_VAR_secret_key_base: ${DRONE_COMMIT}
      TF_VAR_google_analytics_id: UA-144774549-1
      TF_VAR_session_timeout: 15
      TF_VAR_taxi_phv_register_api_url: https://3z97j3cox5.execute-api.eu-west-2.amazonaws.com/dev
      TF_VAR_feedback_url: https://www.surveymonkey.co.uk/r/2T8BX2D
    when:
      event:
        exclude:
        - pull_request

volumes:
- name: docker_sock
  host:
    path: /var/run/docker.sock

trigger:
  branch:
  - develop
  event:
  - pull_request
  - push
